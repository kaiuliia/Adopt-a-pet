{"version":3,"sources":["api/petfinder/index.js","components/hero/index.js","components/pet/index.js","pages/home/index.js","pages/search/index.js","pages/detail/index.js","pages/petDetailsNotFound/index.js","assets/logo.svg","components/search/index.js","components/navigation/index.js","App.js","reportWebVitals.js","index.js","mocks/handlers.js","mocks/browser.js"],"names":["getPets","a","type","query","searchParams","URLSearchParams","requestUrl","toString","fetch","method","response","json","getPetDetails","id","getPetTypes","Hero","image","displayText","className","style","backgroundImage","backgroundBlendMode","backgroundSize","backgroundColor","getHeroTitle","Pet","animal","href","toLowerCase","src","photos","medium","alt","name","breeds","primary","colors","gender","HomePage","useState","data","setData","useParams","useEffect","petsData","getPetsData","length","map","to","SearchPage","search","useLocation","queryParams","useMemo","pets","setPets","petNameToFind","get","pet","PetDetailsPage","loading","setLoading","error","setError","full","description","PetDetailsNotFound","onClick","Search","navigate","useNavigate","searchInputRef","useRef","onSubmit","e","preventDefault","searchQuery","current","value","ref","Navigation","activeStyle","background","petTypes","setPetTypes","types","getPetTypesData","Logo","exact","isActive","undefined","_links","self","split","pop","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","require","worker","start","ReactDOM","render","StrictMode","document","getElementById","handlers","rest","_req","res","ctx","status","req","url","animals","filter","contact","address","state","includes","params","details","setupWorker"],"mappings":"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","file":"static/js/main.acd62927.chunk.js","sourcesContent":["export const getPets = async (type = '', query = '') => {\n  const searchParams = new URLSearchParams({ type, query });\n  const requestUrl = `/animals?${searchParams.toString()}`;\n\n  const response = await fetch(requestUrl, {\n    method: 'GET'\n  });\n\n  const json = await response.json();\n\n  return json;\n};\n\nexport const getPetDetails = async (id) => {\n  const requestUrl = `/animals/${id}`;\n  const response = await fetch(requestUrl, {\n    method: 'GET'\n  });\n\n  const json = await response.json();\n\n  return json;\n};\n\nexport const getPetTypes = async () => {\n  const requestUrl = `/types`;\n  const response = await fetch(requestUrl, {\n    method: 'GET'\n  });\n\n  const json = await response.json();\n\n  return json;\n};\n","import React from 'react';\n\nconst Hero = ({ image, displayText }) => {\n  const type = ''\n\n  return (\n    <div\n      className=\"hero-container\"\n      style={{\n        backgroundImage: `linear-gradient(black, black), url(\"${\n          image || 'pets-hero.png'\n        }\")\n          `,\n        backgroundBlendMode: 'saturation',\n        backgroundSize: 'cover',\n        backgroundColor: '#0000008f'\n      }}\n    >\n      <h2>{displayText || getHeroTitle(type)}</h2>\n    </div>\n  );\n};\n\nexport default Hero;\n\nconst getHeroTitle = (type) => {\n  switch (type) {\n    case 'dog':\n      return 'Dogs';\n    case 'cat':\n      return 'Cats';\n    case 'rabbit':\n      return 'Rabbits';\n    case 'bird':\n      return 'Birds';\n    default:\n      return 'Find your perfect pet';\n  }\n};\n","import React from 'react';\n\nconst Pet = ({ animal }) => {\n  return (\n    <a\n      key={animal.id}\n      href={`/${animal.type.toLowerCase()}/${animal.id}`}\n      className=\"pet\"\n    >\n      <article>\n        <div className=\"pet-image-container\">\n          {\n            <img\n              className=\"pet-image\"\n              src={\n                animal.photos[0]?.medium || 'https://i.imgur.com/aEcJUFK.png'\n              }\n              alt=\"\"\n            />\n          }\n        </div>\n        <h3>{animal.name}</h3>\n        <p>Breed: {animal.breeds.primary}</p>\n        <p>Color: {animal.colors.primary}</p>\n        <p>Gender: {animal.gender}</p>\n      </article>\n    </a>\n  );\n};\n\nexport default Pet;\n","import React, { useEffect, useState } from 'react';\nimport {  useParams, Link } from \"react-router-dom\";\nimport { getPets } from '../../api/petfinder';\nimport Hero from '../../components/hero';\nimport Pet from '../../components/pet';\n\n\nconst HomePage = () => {\n  const [data, setData] = useState(null);\n  const { type } = useParams(); \n\n  useEffect(() => {\n    async function getPetsData() {\n      const petsData = await getPets(type);\n      setData(petsData);\n    }\n\n    getPetsData();\n  }, [type]);\n\n  if (!data) {\n    return <h2>Loading...</h2>;\n  }\n\n  return (\n    <div className=\"page\">\n      <Hero />\n      <h3>\n        <span className=\"pet-type-label\">{type ? `${type}s` : \"Pets\"}</span>{\" \"}\n        available for adoption near you\n      </h3>\n\n      {data.length ? (\n        <div className=\"grid\">\n          {data.map((animal) => (\n            <Link\n              key={animal.id}\n              to={`/${animal.type.toLowerCase()}/${animal.id}`}\n              className=\"pet\"\n            >\n              <article>\n                <div className=\"pet-image-container\">\n                  {\n                    <img\n                      className=\"pet-image\"\n                      src={animal.photos[0]?.medium || \"/missing-animal.png\"}\n                      alt=\"\"\n                    />\n                  }\n                </div>\n                <h3>{animal.name}</h3>\n                <p>Breed: {animal.breeds.primary}</p>\n                <p>Color: {animal.colors.primary}</p>\n                <p>Gender: {animal.gender}</p>\n              </article>\n            </Link> \n          ))}\n        </div>\n      ) : (\n        <p className=\"prompt\">No {type}s available for adoption now.</p>\n      )}\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport Hero from \"../../components/hero\";\nimport { getPets } from \"../../api/petfinder\";\nimport Pet from \"../../components/pet\";\nimport { useLocation } from \"react-router-dom\";\n\nconst SearchPage = () => {\n  const { search }  = useLocation();\n\n  const queryParams = useMemo(() => {\n    return new URLSearchParams(search);\n  }, [search]);\n\n  const [pets, setPets] = useState([]);\n\n  useEffect(() => {\n    async function getPetsData() {\n      const petNameToFind = queryParams.get(\"name\");\n      const petsData = await getPets(\"\", petNameToFind);\n\n      setPets(petsData);\n    }\n\n    getPetsData();\n  }, [queryParams]);\n\n  return (\n    <div className=\"page\">\n      <Hero displayText={`Results for ${queryParams.get(\"name\")}`} />\n\n      <h3>Pets available for adoption near you</h3>\n\n      <main>\n        <div className=\"grid\">\n          {pets.map((pet) => (\n            <Pet animal={pet} key={pet.id} />\n          ))}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default SearchPage;\n","import React, { useEffect, useState } from 'react';\nimport { useParams} from \"react-router-dom\";\nimport { getPetDetails } from '../../api/petfinder';\nimport Hero from '../../components/hero';\n\nconst PetDetailsPage = () => {\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  const { type, id } = useParams();\n \n\n  useEffect(() => {\n    async function getPetsData() {\n      try {\n        const petsData = await getPetDetails(id);\n        setData(petsData);\n        setError(false);\n      } catch (e) {\n        setError(true);\n      }\n      setLoading(false);\n    }\n\n    getPetsData();\n  }, [id]);\n\n  return (\n    <div>\n      {loading ? (\n        <h3>Loading...</h3>\n      ) : error ? (\n        <div>\n          {/* Redirect to /pet-details-not-found if there was an error! */}\n        </div>\n      ) : (\n        <main>\n          <Hero\n            image={data.photos[1]?.full || 'https://i.imgur.com/aEcJUFK.png'}\n            displayText={`Meet ${data.name}`}\n          />\n          <div className=\"pet-detail\">\n            <div className=\"pet-image-container\">\n              <img\n                className=\"pet-image\"\n                src={\n                  data.photos[0]?.medium || 'https://i.imgur.com/aEcJUFK.png'\n                }\n                alt=\"\"\n              />\n            </div>\n            <div>\n              <h1>{data.name}</h1>\n              <h3>Breed: {data.breeds.primary}</h3>\n              <p>Color: {data.colors.primary || 'Unknown'}</p>\n              <p>Gender: {data.gender}</p>\n              <h3>Description</h3>\n              <p>{data.description}</p>\n            </div>\n          </div>\n        </main>\n      )}\n    </div>\n  );\n};\n\nexport default PetDetailsPage;\n","import React from 'react';\n\n// import useHistory here.\n\nconst PetDetailsNotFound = () => {\n\n  // get the history object from useHistory()\n\n  const goBack = () => {\n    // Go back!\n  }\n  \n  return (\n    <main className=\"page\">\n      <h3>404: Who let the dogs out?</h3>\n      <p>Sorry, but the details for this pet have not been uploaded by the shelter yet. Check back later!</p>\n      <img\n        src=\"https://i.chzbgr.com/full/8362031616/h9EB970C5/weve-lost-our-corgination\"\n        alt=\"\"\n      />\n      <div className=\"actions-container\">\n        <button className=\"button\" onClick={goBack}>\n          Go Back\n        </button>\n      </div>\n    </main>\n  );\n};\n\nexport default PetDetailsNotFound;\n","export default __webpack_public_path__ + \"static/media/logo.f5341fdd.svg\";","import React, { useRef } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nconst Search = () => {\n  const navigate = useNavigate();\n  const searchInputRef = useRef();\n\n  const onSearchHandler = (e) => {\n    e.preventDefault();\n\n    const searchQuery = new URLSearchParams({\n      name: searchInputRef.current.value,\n    }).toString();\n    navigate(\"/search/?\" + searchQuery);\n  };\n\n  return (\n    <form onSubmit={onSearchHandler} className=\"search-form\">\n      <input type=\"text\" className=\"search\" ref={searchInputRef} />\n      <button type=\"submit\" className=\"search-button\">\n        🔎\n      </button>\n    </form>\n  );\n};\n\nexport default Search;\n","import React, { useEffect, useState } from \"react\";\nimport { getPetTypes } from \"../../api/petfinder\";\nimport Logo from \"../../assets/logo.svg\";\nimport Search from \"../search\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./navigation.css\";\n\nconst Navigation = () => {\n  let activeStyle = {\n    background: \"#013959\",\n  };\n  const [petTypes, setPetTypes] = useState([]);\n\n  useEffect(() => {\n    async function getPetTypesData() {\n      const { types } = await getPetTypes();\n      setPetTypes(types);\n    }\n\n    getPetTypesData();\n  }, []);\n\n  return (\n    <nav>\n      <div className=\"nav-logo\">\n        <img src={Logo} alt=\"Petlover\" />\n        <Search />\n      </div>\n      <ul className=\"nav-links\">\n        <li key=\"all\">\n          <NavLink\n            exact\n            to=\"/\"\n            className=\"nav-link\"\n            style={({ isActive }) => (isActive ? activeStyle : undefined)}\n          >\n            All Pets\n          </NavLink>\n        </li>\n        {petTypes\n          ? petTypes.map((type) => (\n              <li key={type.name}>\n                <NavLink\n                  to={`/${type._links.self.href.split(\"/\").pop()}`}\n                  key={type.name}\n                  className=\"nav-link\"\n                  style={({ isActive }) => (isActive ? activeStyle : undefined)}\n                >\n                  {type.name}\n                </NavLink>{\" \"}\n              </li>\n            ))\n          : \"Loading...\"}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import HomePage from \"./pages/home\";\nimport SearchPage from \"./pages/search\";\nimport PetDetailsPage from \"./pages/detail\";\nimport PetDetailsNotFound from \"./pages/petDetailsNotFound\";\nimport Navigation from \"./components/navigation\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n  Link,\n  Switch,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Navigation />\n\n      <Routes>\n        {/* <HomePage /> */}\n        <Route path=\"/:type/:id\" element={<PetDetailsPage />} />\n        <Route path=\"/search\" element={<SearchPage />} />\n        <Route path=\"/pet-details-not-found\" element={<PetDetailsNotFound />} />\n        <Route path=\"/:type?\" element={<HomePage />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst { worker } = require('./mocks/browser');\nworker.start();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { rest } from \"msw\";\nimport types from \"./data/types.json\";\nimport animals from \"./data/animals.json\";\nimport details from \"./data/details.json\";\n\nexport const handlers = [\n  rest.get(\"/types\", (_req, res, ctx) => {\n    return res(ctx.status(200), ctx.json(types));\n  }),\n  rest.get(\"/animals\", (req, res, ctx) => {\n    const type = req.url.searchParams.get(\"type\");\n    const query = req.url.searchParams.get(\"query\");\n    let response = animals.animals;\n\n    if (type !== \"\") {\n      response = response.filter(\n        (animal) => animal.type.toLowerCase() === type.toLowerCase()\n      );\n    }\n    if (query !== \"\") {\n      response = response.filter(\n        (animal) =>\n          animal.contact.address.state\n            .toLowerCase()\n            .includes(query.toLowerCase()) ||\n          animal.name.toLowerCase().includes(query.toLowerCase())\n      );\n    }\n\n    return res(ctx.status(200), ctx.json(response));\n  }),\n  rest.get(\"/animals/:id\", (req, res, ctx) => {\n    const { id } = req.params;\n    let response = details[id];\n\n    if (!response) {\n      return res(ctx.status(404));\n    }\n\n    return res(ctx.status(200), ctx.json(response));\n  }),\n];\n","import { setupWorker } from 'msw';\nimport { handlers } from './handlers';\n\nexport const worker = setupWorker(...handlers);\n"],"sourceRoot":""}